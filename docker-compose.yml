services:
  kedro-app:
    build: .
    container_name: nba-ml-kedro
    volumes:
      - ./data:/app/data
      - ./conf:/app/conf
      - .:/app
    environment:
      - PYTHONPATH=/app
    command: ["sleep", "infinity"]
    # REMOVER: networks: - nba-network

  kedro-viz:
    build: .
    container_name: nba-kedro-viz
    ports:
      - "4142:4141"
    command: kedro viz --host 0.0.0.0
    depends_on:
      - kedro-app
    # REMOVER: networks: - nba-network

  postgres:
    image: postgres:13
    container_name: nba-postgres
    environment:
      - POSTGRES_USER=airflow
      - POSTGRES_PASSWORD=airflow
      - POSTGRES_DB=airflow
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    # REMOVER: networks: - nba-network

  airflow-init:
    build:
      context: .
      dockerfile: Dockerfile.airflow
    container_name: nba-airflow-init
    user: "0:0"  # ← AGREGAR AQUÍ TAMBIÉN
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres/airflow
      - AIRFLOW__CORE__LOAD_EXAMPLES=false
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - .:/opt/airflow/nba_project
    depends_on:
      - postgres
    command: >
      bash -c "
        airflow db init &&
        airflow users create --username admin --password admin --firstname Admin --lastname User --role Admin --email admin@example.com
      "
    restart: "no"
    # REMOVER: networks: - nba-network

  airflow:
    build:
      context: .
      dockerfile: Dockerfile.airflow
    container_name: nba-airflow
    user: "0:0"  # ← MANTENER ESTA LÍNEA
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres/airflow
      - AIRFLOW__CORE__DAGS_FOLDER=/opt/airflow/dags
      - AIRFLOW__CORE__LOAD_EXAMPLES=false
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - .:/opt/airflow/nba_project
    ports:
      - "8080:8080"
    depends_on:
      - postgres
      - airflow-init
    command: >
      bash -c "
        airflow scheduler &
        airflow webserver
      "
    restart: unless-stopped
    # REMOVER: networks: - nba-network

volumes:
  postgres_data:

# REMOVER ESTA SECCIÓN COMPLETA:
# networks:
#   nba-network:
#     driver: bridge